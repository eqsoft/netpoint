#!/bin/sh

## live-config(7) - System Configuration Scripts
## Copyright (C) 2006-2013 Daniel Baumann <daniel@debian.org>
##
## This program comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
## This is free software, and you are welcome to redistribute it
## under certain conditions; see COPYING for details.

#set -e

host=$HOSTNAME

#fake
#host="host18457464"
#rtckey="NetPointKey"
#rtcrepo="git@github.com:/eqsoft/nprtc"
#rtchost="1"
#rtcgrp="master"

# if rtckey in npgate.php is et you must reset the password of the private key in chroot env: 
# ssh-keygen -p etc/ssh/id_rsa
env=/etc/ssh/agent.env
privkey=""
gitpath=""

# just a hack for my virtual network nat device
# ToDo: request multiple network devices
if [ "$host" = "host18457464" ]
then
	echo "eth1 detected"
	dhclient eth1
	sleep 5
fi

Rtc ()
{
	Configure_rtc
	# ToDo: SshAgentStop Logout with -X delete key with ssh-add -d ... 
}

Configure_rtc ()
{
	echo "Configure_rtc"
	
	if [ -z "${rtcrepo}" ]
	then
		echo "no rtcrepo setting"
		return 0
	fi
	
	# start ssh agent only if rtcssh is defined
	if [ ! -z "${rtcssh}" ]
	then
		SshAgentStart
	fi	
	
	if [ -z "${repo}" ] && [ ! -z "${rtcgrp}" ]
	then
		repo=$(/usr/bin/git ls-remote "${rtcrepo}" "${rtcgrp}")
		if [ -z "${repo}" ]
		then
			echo "no group repo found: ${rtcrepo} ${rtcgrp}"
		else
			echo "group repo found: ${repo}"
			gitpath="${rtcgrp}"
			GitLoad
		fi
	fi
	
	if [ "${rtchost}" = "1" ] 
	then
		repo=$(/usr/bin/git ls-remote "${rtcrepo}" "${host}")
		if [ -z "${repo}" ]
		then
			echo "no host repo found: ${rtcrepo} ${host}"
			
		else
			gitpath="${host}"
			echo "host repo found: ${repo}"
			GitLoad
		fi
	fi
}

GitLoad () {
	echo "try to load rtc repo: ${rtcrepo} ${gitpath}"
	# extract last /entry as $repname
	#repname=`expr match ${rtcrepo} '.*\/\(.*\)'`
	#repname="nprtc"
	eval cd /tmp && git clone --depth=1 -b "${gitpath}" --single-branch "${rtcrepo}" && cp -a "${rtcreponame}"/fs_overlay/* / && rm -r "${rtcreponame}"
	# unfortunately github does not support remote archive, hrz gitolite does:
	# eval cd / && git archive --format=tar --remote="${rtcrepo}"  "${rtcrepo}" | tar xf - --strip-components=1
}

SshAgentStart () {
	if [ -f "/etc/ssh/id_rsa" ]
	then
		privkey="/etc/ssh/id_rsa"
	elif [ -f "/etc/ssh/id_dsa" ]
	then
		privkey="/etc/ssh/id_dsa" 
	elif [ -f "/etc/ssh/id_dss" ]
	then
		privkey="/etc/ssh/id_dss" 
	else
		echo "no ssh privkey, can not start SshAgent"
		return 0
	fi

	
	if ! agent_is_running; then
		agent_start
		agent_add
	elif ! agent_has_keys; then
		agent_add
	fi
	unset env
}

agent_is_running () {
    if [ "$SSH_AUTH_SOCK" ]; then
	# echo "SSH_SOCK=${SSH_AUTH_SOCK}"
        # ssh-add returns:
        #   0 = agent running, has keys
        #   1 = agent running, no keys
        #   2 = agent not running
        # if your keys are not stored in ~/.ssh/id_rsa.pub or ~/.ssh/id_dsa.pub, you'll need
        # to paste the proper path after ssh-add
        ssh-add -l >/dev/null 2>&1 || [ $? -eq 1 ]
    else
	# echo "SSH_AUTH_SOCK=false"
        false
    fi
}

agent_has_keys () {
    # if your keys are not stored in ~/.ssh/id_rsa.pub or ~/.ssh/id_dsa.pub, you'll need
    # to paste the proper path after ssh-add
    ssh-add -l >/dev/null 2>&1
}

agent_load_env () 
{
    . "$env" >/dev/null
}

agent_start () {
    (umask 077; ssh-agent >"$env")
    . "$env" >/dev/null
}

agent_add () { 
	eval /usr/local/bin/add_ssh_pass "${privkey}" "${rtckey}" 
}

Rtc
